# Import required libraries
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

# Load the Iris dataset
iris = load_iris()
x = iris.data
y = iris.target

# Print dataset features and labels
print("Features (X):")
print(x)
print("\nTarget labels (Y):")
print(y)

# Split the dataset into training and testing sets
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=0)

# Standardize features for better performance
scaler = StandardScaler()
x_train = scaler.fit_transform(x_train)
x_test = scaler.transform(x_test)

# Train a Logistic Regression model
model = LogisticRegression(max_iter=200)
model.fit(x_train, y_train)

# Predict the labels for test set
y_pred = model.predict(x_test)

# Print model accuracy and evaluation metrics
print("\nPredicted labels:")
print(y_pred)

print("\nAccuracy Score:")
print(accuracy_score(y_test, y_pred))

print("\nConfusion Matrix:")
print(confusion_matrix(y_test, y_pred))

print("\nClassification Report:")
print(classification_report(y_test, y_pred))
